{"version":3,"sources":["components/FileField.jsx","components/CheckBox.jsx","components/PreviewProcessedData.jsx","consts.js","utils.js","pages/Main.jsx","components/InfoBlock.jsx","pages/Info.jsx","components/NavBar.jsx","components/NotFoundPage.jsx","App.jsx","index.js"],"names":["FileField","onChange","useState","filesNumber","setFilesNumber","filesNameList","setFilesNameList","inputFileLabel","className","type","id","event","files","target","length","name","filesData","i","reader","FileReader","onload","push","result","readAsText","accept","multiple","htmlFor","CheckBox","value","checked","PreviewProcessedData","isDisabledShowButton","data","onShowClick","headerCells","isVisibleButtons","activeButton","setActiveButton","map","el","index","flat","person","Object","keys","key","classNames","onClick","disabled","ws_header","sheetToArrayBuffer","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","Main","fileData","setFileData","processedData","setProcessedData","checkboxState","setCheckboxState","isSplited","wb","XLSX","utils","book_new","SheetNames","ws_data_set","console","log","Sheets","aoa_to_sheet","forEach","ws_data","write","bookType","createExcelFile","saveAs","Blob","JSON","parse","r1","r2","ils","fzl","izl","ozl","dto1","dfr21","InfoBlock","children","icon","header","infoText","Info","NavBar","exact","to","activeClassName","activeStyle","fontWeight","borderColor","NotFoundPage","App","path","process","basename","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69546f9d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Paperclip } from 'react-feather';\n\nconst FileField = ({onChange}) => {\n  const [filesNumber, setFilesNumber] = useState(null);\n  const [filesNameList, setFilesNameList] = useState(null);\n  \n  const onFileChangeHandler = (event) => {\n    const {files} = event.target;\n    \n    setFilesNumber(files.length)\n    setFilesNameList(files[0].name)\n    \n    if (files !== ' ') {\n        \n      if (files.length) {\n\n        let filesData = [];\n        let i = 0;\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          i++; \n          filesData.push(event.target.result);    \n          if (i < files.length) reader.readAsText(files[i]);\n          if (i === files.length) onChange(filesData);\n        }\n\n        if (i === 0) reader.readAsText(files[0]);\n      }\n    }\n  }\n  \n  const inputFileLabel = <span className=\"button-content\"> \n    {filesNumber > 1 \n      ? `Выбрано файлов: ${filesNumber}`\n      : (filesNumber === 1) \n        ? `${filesNameList}`\n        : <>Choose file(s) <Paperclip/></>\n    }\n  </span> \n  \n  return (\n    <div className = \"input-field\">\n      <p>Step 1</p>\n      <input\n        type=\"file\" \n        id=\"inputFile\" \n        onChange={onFileChangeHandler} \n        accept=\" .txt\" \n        multiple=\"multiple\"\n      />\n      <label \n        htmlFor=\"inputFile\" \n        className=\"input-field-label\"\n      > \n        {inputFileLabel}\n      </label>\n    </div>\n  )\n}\n\nexport default FileField;","import React from 'react';\n\nconst CheckBox = ({value, onChange}) => {\n  const onChangeHandler = (event) => {\n      onChange(event.target.checked);\n  }\n\n  return (\n    <div className =\"checkbox-container\">\n      <input type=\"checkbox\" id=\"checkbox\" className=\"checkbox\" value={value} onChange={onChangeHandler}/>\n      <label htmlFor=\"checkbox\" className=\"checkbox-label\">Show each file as a separate sheet</label> \n    </div>\n  )\n}\n\nexport default CheckBox;","import classNames from \"classnames\";\nimport { useState } from \"react\";\nimport { Eye } from 'react-feather';\n\nconst PreviewProcessedData = ({\n  isDisabledShowButton,\n  data,\n  onShowClick,\n  headerCells,\n  isVisibleButtons\n}) => {\n\n  const [activeButton, setActiveButton] = useState(-1);\n  \n  if (!data) return <div className=\"preview-container\">\n      <button \n        className=\"show-preview-button\"\n        disabled={isDisabledShowButton}\n        onClick={onShowClick}>\n          <span \n            className={classNames(\"preview-title\", !isDisabledShowButton && \"is-active\")}\n          >\n            Показать превью <Eye className={classNames(\"preview-button-icon\", !isDisabledShowButton && \"is-active\")}/>\n          </span>\n      </button>\n  </div>\n\n  return (\n    <div className=\"preview-container\">\n      <div className=\"table-content\">\n        <table>\n          <thead className=\"sticky\">\n            <tr>\n              {headerCells.map((el, index) => <th key={`Table header ${index}`}>{el}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {(\n              activeButton === -1\n                ? data.flat()\n                : data[activeButton]\n            ).map((person, index) => \n              <tr key={`Table row ${index}`}>\n                {Object.keys(person).map((key, index) => \n                  <td key={`Table data ${index}`}>\n                      {([[person[key].value]])}\n                  </td>\n                )}\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {isVisibleButtons && \n          <div className=\"tabs-toggler-panel\">\n            <button \n              className={classNames(\"preview-button\", activeButton === -1 && \"is-active\")}\n              onClick={() => setActiveButton(-1)}\n            >\n                Свод\n            </button>\n\n            {data.map((el, index) => \n              <button \n                key={`Button ${index}`} \n                className={classNames(\"preview-button\", activeButton === index && \"is-active\")}\n                onClick={() => setActiveButton(index)}\n              >\n                {`Sheet ${index+1}`}\n              </button>)}\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PreviewProcessedData;","export const ws_header = ['Страховой номер','Фамилия','Имя','Отчество','Дата увольнения','Дата приема - перевода'];","import XLSX from \"xlsx\";\nimport { saveAs } from 'file-saver';\nimport { ws_header } from './consts';\n\nconst getProcessedData = initialData => initialData\n  .map(el => JSON.parse(el)\n    .data\n    .map(({r1, r2, ils, fzl, izl, ozl}) => ({\n      ils: {\n        value: ils || \"\",\n        name: \"Страховой номер\"\n      }, \n      fzl: {\n        value: fzl || \"\",\n        name: \"Фамилия\"\n      },\n      izl: {\n        value: izl || \"\",\n        name: \"Имя\"\n      },\n      ozl: {\n        value: ozl || \"\",\n        name: \"Отчество\"\n      },\n      dto1: {\n        value: r1[0].dto1 || \"\",\n        name: \"Дата увольнения\"\n      },\n      dfr21: {\n        value: r2[0].dfr21 || \"\",\n        name: \"Дата приема - перевода\"\n      },\n    }))\n  )\n\n\nconst createExcelFile = (data, isSplited) => {\n    let wb = XLSX.utils.book_new();\n    wb.SheetNames.push(\"Свод\");\n\n    const ws_data_set = data.flat().map((person) => Object.keys(person).map(key => ([[person[key].value]])));\n    console.log(ws_data_set)\n    wb.Sheets[\"Свод\"] = XLSX.utils.aoa_to_sheet([ws_header, ...ws_data_set]);\n\n    if (isSplited) {\n      data.forEach((el, index) => {\n        wb.SheetNames.push(`Sheet ${index+1}`);\n        const ws_data = el.map((person) => Object.keys(person).map(key => ([[person[key].value]])));\n        wb.Sheets[`Sheet ${index+1}`] = XLSX.utils.aoa_to_sheet([ws_header, ...ws_data]);\n      })\n    }\n\n    return XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});\n} \n\nconst sheetToArrayBuffer = (s) => {\n  const buf = new ArrayBuffer(s.length);\n  let view = new Uint8Array(buf);\n  for (let i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;    \n}     \n\nconst downloadExcelFile = data => {\n  saveAs(new Blob([sheetToArrayBuffer(data)],{type:\"application/octet-stream\"}), 'test.xlsx');\n}\n\nexport { createExcelFile, downloadExcelFile, getProcessedData }\n\n\n  \n","import React, {useState} from \"react\";\n\nimport FileField from \"../components/FileField\";\nimport CheckBox from \"../components/CheckBox\";\n\nimport PreviewProcessedData from \"../components/PreviewProcessedData\";\n\nimport {createExcelFile, downloadExcelFile, getProcessedData} from \"../utils\";\n\nimport { Download } from 'react-feather';\n\nimport { ws_header } from '../consts';\n\nconst Main = () => {\n  const [fileData, setFileData] = useState(null);\n  const [processedData, setProcessedData] = useState(null);\n  const [checkboxState, setCheckboxState] = useState(false);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div>\n          <div className=\"file-field-and-checkbox\">\n            <FileField\n              onChange={(data) => {\n                setFileData(data);\n                setProcessedData(null);\n              }}\n            />\n\n            <CheckBox\n              value={checkboxState}\n              onChange={setCheckboxState}\n            />\n          </div>\n        </div>\n\n        <div>\n          <p>Step 2</p>\n          <button \n            className=\"download-button\"\n            disabled={!processedData}\n            onClick={() => downloadExcelFile(createExcelFile(processedData, checkboxState))}\n          >\n            <span>Скачать <Download/></span>\n          </button>\n        </div>\n      </div>\n\n      <PreviewProcessedData\n        isDisabledShowButton={!fileData}\n        onShowClick={() => setProcessedData(getProcessedData(fileData))}\n        data={processedData}\n        headerCells={ws_header}\n        isVisibleButtons={checkboxState}\n      />\n    </>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nconst InfoBlock = ({children, icon, header, infoText}) => (\n  <div className=\"info-page-block\">\n    {icon}\n    <span><p className=\"info-heading\">{header}</p></span>\n    <div className=\"info-page-text\">{children ? children : infoText}</div>\n  </div>\n);\n\nexport default InfoBlock;","import React from \"react\";\n\nimport { File, Info as Infoicon, Upload, BookOpen} from 'react-feather';\n\nimport InfoBlock from \"../components/InfoBlock\";\n\nconst Info = () => {\n\n  return (\n    <div className=\"info-page-container\">\n\n      <InfoBlock\n        icon={<Infoicon className=\"info-page-icon\"/>}\n        header={\"About\"}\n        infoText={\"The pu-2 application is a tool developed to help in processing data prepared by the Client in the form of pu-2 forms.\"}\n      />\n\n      <InfoBlock\n        icon={<File className=\"info-page-icon\"/>}\n        header={\"Pu-2 form\"}\n        infoText={\"PU-2 form refers to personalized accounting documents and contains information about the hiring and dismissal of employees.\"}\n      />\n\n      <InfoBlock\n        icon={<BookOpen className=\"info-page-icon\"/>}\n        header={\"Manual\"}\n      >\n        <ul className=\"unordered\">\n          <li><b>Step 1.</b> Upload files.\n            <ul className=\"unordered\">\n              <li className=\"additional\">In case you want each processed file to be displayed on a separate excel sheet, tick the \"Show each file as a separate sheet\" checkbox.</li>\n            </ul>\n          </li>\n          <li><b>Step 2.</b> Click on \"Show preview\" button if needed.</li>\n          <li><b>Step 3.</b> Download .xlsx file with a list of employees and information about them.</li>\n        </ul>\n      </InfoBlock>\n\n      <InfoBlock\n        icon={<Upload className=\"info-page-icon\"/>}\n        header={\"Upload file requirements\"}\n      >\n        <ul> \n          <li>Only .txt files will be accepted.</li>\n          <li>Files cannot be password protected.</li>\n          <li>Required fields of pu-2 form: \n              <ul>\n                <li>ils (Insurance number)</li> \n                <li>fzl (Last name)</li> \n                <li>izl (First name)</li>\n                <li>ozl (Patronymic)</li>\n                <li>dto1 (Dismissal date)</li>\n                <li>dfr21 (Hiring date).</li>\n              </ul>\n          </li>\n        </ul>\n      </InfoBlock>\n      \n    </div>\n  );\n\n}\n\nexport default Info;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Disc, Info } from 'react-feather';\n\nconst NavBar = () => (\n  <div className=\"nav-bar\">\n    <NavLink\n      className=\"nav-bar-button\"\n      exact\n      to=\"/\"\n      activeClassName=\"selected\"\n      activeStyle={{\n        fontWeight: \"bold\",\n        borderColor: \"black\"\n      }}\n    >\n      <Disc className=\"nav-bar-button-icon\"/> Main\n    </NavLink>\n\n    <NavLink\n      className=\"nav-bar-button\"\n      exact\n      to=\"/info\"\n      activeClassName=\"selected\"\n      activeStyle={{\n        fontWeight: \"bold\",\n        borderColor: \"black\"\n      }}\n    >\n      <Info className=\"nav-bar-button-icon\"/> Info\n    </NavLink>\n  </div> \n);\n\nexport default NavBar;","import React from \"react\";\n\nconst NotFoundPage = () => (\n  <div className =\"not-found-page-container\">\n    <div className=\"not-found-page-text\"> 404 </div>\n    <p>Oops... Looks like the page you are looking for doesn't exist :(</p>\n  </div>\n)\n\nexport default NotFoundPage;","import React from \"react\";\nimport Main from \"./pages/Main\";\nimport Info from \"./pages/Info\";\nimport NavBar from \"./components/NavBar\";\nimport NotFoundPage from \"./components/NotFoundPage\";\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nconst App = () => (\n  <Router>\n    <Route exact path=\"/\">\n      <Redirect to={process.env.PUBLIC_URL} />\n    </Route> \n    <Route>\n      <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Main />\n            </Route>\n            <Route exact path=\"/info\">\n              <Info />\n            </Route>\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </Route>\n  </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
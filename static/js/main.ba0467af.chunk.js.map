{"version":3,"sources":["components/FileField.jsx","components/CheckBox.jsx","components/PreviewProcessedData.jsx","utils.js","pages/Main.jsx","components/InfoBlock.jsx","pages/Info.jsx","components/NavBar.jsx","components/NotFoundPage.jsx","App.jsx","index.js"],"names":["FileField","onChange","useState","filesNumber","setFilesNumber","filesNameList","setFilesNameList","inputFileLabel","className","type","id","event","files","target","length","name","filesData","i","reader","FileReader","onload","push","result","readAsText","accept","multiple","htmlFor","CheckBox","value","checked","PreviewProcessedData","data","sheetToArrayBuffer","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","Main","fileData","setFileData","processedData","setProcessedData","checkboxState","setCheckboxState","disabled","onClick","map","el","JSON","parse","r1","r2","ils","fzl","izl","ozl","dto1","dfr21","isSplited","wb","XLSX","utils","book_new","SheetNames","ws_header","ws_data_set","flat","person","Object","keys","key","Sheets","aoa_to_sheet","forEach","index","ws_data","write","bookType","createExcelFile","saveAs","Blob","InfoBlock","children","icon","header","infoText","Info","NavBar","exact","to","activeClassName","activeStyle","fontWeight","borderColor","NotFoundPage","App","path","process","basename","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba0467af.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Paperclip } from 'react-feather';\n\nconst FileField = ({onChange}) => {\n  const [filesNumber, setFilesNumber] = useState(null);\n  const [filesNameList, setFilesNameList] = useState(null);\n  \n  const onFileChangeHandler = (event) => {\n    const {files} = event.target;\n    \n    setFilesNumber(files.length)\n    setFilesNameList(files[0].name)\n    \n    if (files !== ' ') {\n        \n      if (files.length) {\n\n        let filesData = [];\n        let i = 0;\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          i++; \n          filesData.push(event.target.result);    \n          if (i < files.length) reader.readAsText(files[i]);\n          if (i === files.length) onChange(filesData);\n        }           \n\n        if (i === 0) reader.readAsText(files[0]);\n      }\n    }\n  }\n  \n  const inputFileLabel = <span className=\"button-content\"> \n    {filesNumber > 1 \n      ? `Выбрано файлов: ${filesNumber}`\n      : (filesNumber === 1) \n        ? `${filesNameList}`\n        : <>Choose file(s) <Paperclip/></>\n    }\n  </span> \n  \n  return (\n    <div className = \"input-field\">\n      <p>Step 1</p>\n      <input\n        type=\"file\" \n        id=\"inputFile\" \n        onChange={onFileChangeHandler} \n        accept=\" .txt\" \n        multiple=\"multiple\"\n      />\n      <label \n        htmlFor=\"inputFile\" \n        className=\"input-field-label\"\n      > \n        {inputFileLabel}\n      </label>\n    </div>\n  )\n}\n\nexport default FileField;","import React from 'react';\n\nconst CheckBox = ({value, onChange}) => {\n  const onChangeHandler = (event) => {\n      onChange(event.target.checked);\n  }\n\n  return (\n    <div className =\"checkbox-container\">\n      <input type=\"checkbox\" id=\"checkbox\" className=\"checkbox\" value={value} onChange={onChangeHandler}/>\n      <label htmlFor=\"checkbox\" className=\"checkbox-label\">Show each file as a separate sheet</label> \n    </div>\n  )\n}\n\nexport default CheckBox;","const PreviewProcessedData = ({data}) => {\n  if (!data) return null;\n\n  return (\n    <div className=\"processed-data-message\">Данные обработаны!</div>\n  );\n}\n\nexport default PreviewProcessedData","import XLSX from \"xlsx\";\nimport { saveAs } from 'file-saver';\n\nconst getProcessedData = initialData => initialData\n  .map(el => JSON.parse(el)\n    .data\n    .map(({r1, r2, ils, fzl, izl, ozl}) => ({\n      ils: {\n        value: ils || \"\",\n        name: \"Страховой номер\"\n      }, \n      fzl: {\n        value: fzl || \"\",\n        name: \"Фамилия\"\n      },\n      izl: {\n        value: izl || \"\",\n        name: \"Имя\"\n      },\n      ozl: {\n        value: ozl || \"\",\n        name: \"Отчество\"\n      },\n      dto1: {\n        value: r1[0].dto1 || \"\",\n        name: \"Дата увольнения\"\n      },\n      dfr21: {\n        value: r2[0].dfr21 || \"\",\n        name: \"Дата приема - перевода\"\n      },\n    }))\n  )\n\n\nconst createExcelFile = (data, isSplited) => {\n    let wb = XLSX.utils.book_new();\n    wb.SheetNames.push(\"Свод\");\n\n    const ws_header = ['Страховой номер','Фамилия','Имя','Отчество','Дата увольнения','Дата приема - перевода'];\n    const ws_data_set = data.flat().map((person) => Object.keys(person).map(key => ([[person[key].value]])));\n\n    wb.Sheets[\"Свод\"] = XLSX.utils.aoa_to_sheet([ws_header, ...ws_data_set]);\n\n    if (isSplited) {\n      data.forEach((el, index) => {\n        wb.SheetNames.push(`Sheet ${index+1}`);\n        const ws_data = el.map((person) => Object.keys(person).map(key => ([[person[key].value]])));\n        wb.Sheets[`Sheet ${index+1}`] = XLSX.utils.aoa_to_sheet([ws_header, ...ws_data]);\n      })\n    }\n\n    return XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});\n} \n\nconst sheetToArrayBuffer = (s) => {\n  const buf = new ArrayBuffer(s.length);\n  let view = new Uint8Array(buf);\n  for (let i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;    \n}     \n\nconst downloadExcelFile = data => {\n  saveAs(new Blob([sheetToArrayBuffer(data)],{type:\"application/octet-stream\"}), 'test.xlsx');\n}\n\nexport { createExcelFile, downloadExcelFile, getProcessedData }\n\n\n  \n","import React, {useState} from \"react\";\n\nimport FileField from \"../components/FileField\";\nimport CheckBox from \"../components/CheckBox\";\n\nimport PreviewProcessedData from \"../components/PreviewProcessedData\";\n\nimport {createExcelFile, downloadExcelFile, getProcessedData} from \"../utils\";\n\nimport { Download } from 'react-feather';\n\nconst Main = () => {\n\n  const [fileData, setFileData] = useState(null);\n  const [processedData, setProcessedData] = useState(null);\n  const [checkboxState, setCheckboxState] = useState(false);\n\n  return (\n    <>\n      <div className=\"file-field-and-checkbox\">\n      <FileField\n        onChange={setFileData}\n      />\n\n      <CheckBox\n        value={checkboxState}\n        onChange={setCheckboxState}\n      />\n      </div>\n\n      <div className=\"process-button\">\n        <p>Step 2</p>\n        <button \n          disabled={!fileData}   \n          onClick={() => setProcessedData(getProcessedData(fileData))}>\n          <span>Process file(s)</span>\n        </button>\n        <PreviewProcessedData data={processedData}/>\n      </div>\n\n      <div className=\"download-button\">\n        <p>Step 3</p>\n        <button \n          disabled={!processedData}\n          onClick={() => downloadExcelFile(createExcelFile(processedData, checkboxState))}>\n          <span>Download <Download/></span>\n        </button>\n      </div>\n    </>\n)\n\n}\n\nexport default Main;","import React from \"react\";\n\nconst InfoBlock = ({children, icon, header, infoText}) => (\n  <div className=\"info-page-block\">\n    {icon}\n    <span><p className=\"info-heading\">{header}</p></span>\n    <div className=\"info-page-text\">{children ? children : infoText}</div>\n  </div>\n);\n\nexport default InfoBlock;","import React from \"react\";\n\nimport { File, Info as Infoicon, Upload, BookOpen} from 'react-feather';\n\nimport InfoBlock from \"../components/InfoBlock\";\n\nconst Info = () => {\n\n  return (\n    <div className=\"info-page-container\">\n\n      <InfoBlock\n        icon={<Infoicon className=\"info-page-icon\"/>}\n        header={\"About\"}\n        infoText={\"The pu-2 application is a tool developed to help in processing data prepared by the Client in the form of pu-2 forms.\"}\n      />\n\n      <InfoBlock\n        icon={<File className=\"info-page-icon\"/>}\n        header={\"Pu-2 form\"}\n        infoText={\"PU-2 form refers to personalized accounting documents and contains information about the hiring and dismissal of employees.\"}\n      />\n\n      <InfoBlock\n        icon={<BookOpen className=\"info-page-icon\"/>}\n        header={\"Manual\"}\n      >\n        <ul className=\"unordered\">\n          <li><b>Step 1.</b> Upload files.\n            <ul className=\"unordered\">\n              <li className=\"additional\">In case you want each processed file to be displayed on a separate excel sheet, tick the \"Show each file as a separate sheet\" checkbox.</li>\n            </ul>\n          </li>\n          <li><b>Step 2.</b> Click on \"Show preview\" button if needed.</li>\n          <li><b>Step 3.</b> Download .xlsx file with a list of employees and information about them.</li>\n        </ul>\n      </InfoBlock>\n\n      <InfoBlock\n        icon={<Upload className=\"info-page-icon\"/>}\n        header={\"Upload file requirements\"}\n      >\n        <ul> \n          <li>Only .txt files will be accepted.</li>\n          <li>Files cannot be password protected.</li>\n          <li>Required fields of pu-2 form: \n              <ul>\n                <li>ils (Insurance number)</li> \n                <li>fzl (Last name)</li> \n                <li>izl (First name)</li>\n                <li>ozl (Patronymic)</li>\n                <li>dto1 (Dismissal date)</li>\n                <li>dfr21 (Hiring date).</li>\n              </ul>\n          </li>\n        </ul>\n      </InfoBlock>\n      \n    </div>\n  );\n\n}\n\nexport default Info;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Disc, Info } from 'react-feather';\n\nconst NavBar = () => (\n  <div className=\"nav-bar\">\n    <NavLink\n      className=\"nav-bar-button\"\n      exact\n      to=\"/\"\n      activeClassName=\"selected\"\n      activeStyle={{\n        fontWeight: \"bold\",\n        borderColor: \"black\"\n      }}\n    >\n      <Disc className=\"nav-bar-button-icon\"/> Main\n    </NavLink>\n\n    <NavLink\n      className=\"nav-bar-button\"\n      exact\n      to=\"/info\"\n      activeClassName=\"selected\"\n      activeStyle={{\n        fontWeight: \"bold\",\n        borderColor: \"black\"\n      }}\n    >\n      <Info className=\"nav-bar-button-icon\"/> Info\n    </NavLink>\n  </div> \n);\n\nexport default NavBar;","import React from \"react\";\n\nconst NotFoundPage = () => (\n  <div className =\"not-found-page-container\">\n    <div className=\"not-found-page-text\"> 404 </div>\n    <p>Oops... Looks like the page you are looking for doesn't exist :(</p>\n  </div>\n)\n\nexport default NotFoundPage;","import React from \"react\";\nimport Main from \"./pages/Main\";\nimport Info from \"./pages/Info\";\nimport NavBar from \"./components/NavBar\";\nimport NotFoundPage from \"./components/NotFoundPage\";\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nconst App = () => (\n  <Router>\n    <Route exact path=\"/\">\n      <Redirect to={process.env.PUBLIC_URL} />\n    </Route> \n    <Route>\n      <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Main />\n            </Route>\n            <Route exact path=\"/info\">\n              <Info />\n            </Route>\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </Route>\n  </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}